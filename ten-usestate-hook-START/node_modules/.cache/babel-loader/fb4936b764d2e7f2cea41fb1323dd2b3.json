{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\isken\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\reactDT\\\\ten-usestate-hook-START\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\isken\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\reactDT\\\\ten-usestate-hook-START\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  /* useState detects the initial contition of the variable of count\n  ***useState does 2 things.\n  1. useState(0) means assign count = 0\n  2. setCount function detects the count variable and updates it\n  \n   onClick={increase} => onClick is built in event handler\n   it detects when the button is clicked\n  ​\n   increase => will do make the change when the button is clicked. \n   incresae function will have the js code\n   currently, increse function does one thing. It is to change the value of count using setCount function*/\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1]; //increase will increase the count by 1\n\n\n  function increase() {\n    setCount(count + 1);\n  } // decrease will reduce count by 1\n\n\n  function decrease() {\n    setCount(count - 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, \" \", count, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: \"30px\",\n      width: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, \"Current Time\"));\n}\n\nexport default App; // 1. Create a button with text: Current Time\n//  2. Style the button to match the style\n// 3. Create an h1 and to get the current time.\n//  4. Make sure to use create needed objects and the clock is ticking\n//   NOTE : USE setInterval(function) TO SET RENDER THE UPDATE TIMES","map":{"version":3,"sources":["C:/Users/isken/OneDrive/Masaüstü/reactDT/ten-usestate-hook-START/src/components/App.jsx"],"names":["React","useState","App","count","setCount","increase","decrease","fontSize","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,kBAAwBD,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd,iBAZa,CAcf;;;AACE,WAASC,QAAT,GAAmB;AACjBD,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD,GAjBY,CAmBb;;;AACA,WAASG,QAAT,GAAmB;AACjBF,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,KAAN,MADO,eAEP;AAAQ,IAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFO,eAGP;AAAQ,IAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHO,eAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJO,eAKP;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,MAAV;AAAiBC,MAAAA,KAAK,EAAC;AAAvB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALO,CAAP;AAOD;;AAED,eAAeN,GAAf,C,CACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  /* useState detects the initial contition of the variable of count\n  ***useState does 2 things.\n  1. useState(0) means assign count = 0\n  2. setCount function detects the count variable and updates it\n  \n   onClick={increase} => onClick is built in event handler\n   it detects when the button is clicked\n​\n   increase => will do make the change when the button is clicked. \n   incresae function will have the js code\n   currently, increse function does one thing. It is to change the value of count using setCount function*/\n  const [count, setCount]=useState(0);\n  \n//increase will increase the count by 1\n  function increase(){\n    setCount(count+1);\n  }\n\n  // decrease will reduce count by 1\n  function decrease(){\n    setCount(count-1);\n  }\n  return <div className=\"container\">\n  <h1> {count} </h1>\n  <button onClick={increase}>+</button>\n  <button onClick={decrease}>-</button>\n  <br/>\n  <button style={{fontSize:\"30px\",width:\"150px\"}}>Current Time</button>\n</div>;\n}\n\nexport default App;\n// 1. Create a button with text: Current Time\n//  2. Style the button to match the style\n// 3. Create an h1 and to get the current time.\n//  4. Make sure to use create needed objects and the clock is ticking\n//   NOTE : USE setInterval(function) TO SET RENDER THE UPDATE TIMES"]},"metadata":{},"sourceType":"module"}